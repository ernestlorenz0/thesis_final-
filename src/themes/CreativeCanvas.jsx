import React from "react";

/* ---------------- TITLE SLIDE ---------------- */
export function TitleSlide({ title, subtitle }) {
  return (
    <section className="relative w-[1920px] h-[1080px] bg-gradient-to-tr from-pink-200 via-yellow-200 to-cyan-200 flex items-center justify-center overflow-hidden">
      {/* Diagonal color overlay */}
      <div className="absolute inset-0 bg-gradient-to-br from-purple-300/50 to-transparent -skew-y-6"></div>

      {/* Floating title block */}
      <div className="relative z-10 bg-white/80 backdrop-blur-md px-16 py-10 rounded-2xl shadow-2xl border-4 border-pink-400 rotate-2">
        <h1 className="text-6xl font-extrabold font-serif text-gray-900 mb-4 drop-shadow-lg">
          {title}
        </h1>
        <h2 className="text-2xl font-light italic text-gray-700">{subtitle}</h2>
      </div>
    </section>
  );
}

export function TOCSlide({ tocData }) {
  // Handle both old format (items array) and new format (tocData object)
  const title = tocData?.title || "Table of Contents";
  const sections = tocData?.sections || [];
  
  return (
    <section className="relative w-[1920px] h-[1080px] bg-[#fafafa] text-[#1c1c1c] flex flex-col items-center justify-center overflow-hidden">
      {/* Background paint strokes */}
      <div className="absolute top-20 left-10 w-[600px] h-[200px] bg-gradient-to-r from-pink-400/60 to-orange-400/60 rounded-[50%] rotate-[-10deg] blur-2xl"></div>
      <div className="absolute bottom-20 right-16 w-[500px] h-[180px] bg-gradient-to-r from-sky-400/60 to-violet-400/60 rounded-[50%] rotate-[15deg] blur-2xl"></div>

      {/* Abstract blobs */}
      <div className="absolute top-1/3 right-1/4 w-40 h-40 bg-yellow-300/50 rounded-full mix-blend-multiply"></div>
      <div className="absolute bottom-1/3 left-1/4 w-56 h-56 bg-purple-300/50 rounded-full mix-blend-multiply"></div>

      {/* Title */}
      <h2 className="text-7xl font-extrabold mb-16 tracking-wide bg-clip-text text-transparent bg-gradient-to-r from-pink-500 via-orange-500 to-yellow-500 drop-shadow-lg">
        {title}
      </h2>

      {/* Two-Column Layout for TOC - Minimized to show only main sections */}
      <div className="grid grid-cols-2 gap-20 z-10 max-w-6xl w-full">
        {/* Left Column */}
        <div className="space-y-10">
          {sections.slice(0, Math.ceil(sections.length / 2)).map((section, sectionIndex) => (
            <div key={sectionIndex} className="flex items-center gap-8 text-gray-800 hover:text-purple-600 transition-colors duration-300 group">
              <div className="w-20 h-20 flex items-center justify-center bg-gradient-to-r from-violet-500 to-sky-500 group-hover:from-violet-600 group-hover:to-sky-600 text-white rounded-full shadow-lg text-2xl font-bold flex-shrink-0 border-3 border-violet-200 group-hover:border-violet-300 transition-all duration-300">
                {sectionIndex + 1}
              </div>
              <span className="text-5xl font-bold text-left leading-tight flex-1 group-hover:translate-x-2 transition-transform duration-300">{section.title}</span>
            </div>
          ))}
        </div>

        {/* Right Column */}
        <div className="space-y-10">
          {sections.slice(Math.ceil(sections.length / 2)).map((section, sectionIndex) => {
            const actualIndex = Math.ceil(sections.length / 2) + sectionIndex;
            return (
              <div key={actualIndex} className="flex items-center gap-8 text-gray-800 hover:text-purple-600 transition-colors duration-300 group">
                <div className="w-20 h-20 flex items-center justify-center bg-gradient-to-r from-violet-500 to-sky-500 group-hover:from-violet-600 group-hover:to-sky-600 text-white rounded-full shadow-lg text-2xl font-bold flex-shrink-0 border-3 border-violet-200 group-hover:border-violet-300 transition-all duration-300">
                  {actualIndex + 1}
                </div>
                <span className="text-5xl font-bold text-left leading-tight flex-1 group-hover:translate-x-2 transition-transform duration-300">{section.title}</span>
              </div>
            );
          })}
        </div>
      </div>
    </section>
  );
}

/* ---------------- MAIN SLIDE 1 ---------------- */
export function MainSlide1({ title, content, autoGeneratedImage }) {
  return (
    <section className="relative w-[1920px] h-[1080px] bg-gradient-to-br from-pink-100 via-purple-50 to-blue-100 text-gray-800 flex items-center justify-center overflow-hidden">
      {/* Creative background elements */}
      <div className="absolute inset-0">
        <div className="absolute top-20 left-20 w-64 h-64 bg-gradient-to-br from-pink-400/30 to-orange-400/30 rounded-full blur-2xl"></div>
        <div className="absolute bottom-20 right-20 w-80 h-80 bg-gradient-to-br from-violet-400/30 to-sky-400/30 rounded-full blur-2xl"></div>
      </div>

      {/* Two-column layout */}
      <div className="relative z-10 w-full h-full flex items-center justify-center px-8">
        {/* Left: auto image or placeholder for 2nd term */}
        <div className="w-1/2 h-4/5 flex items-center justify-center px-8">
          {autoGeneratedImage ? (
            <img
              src={autoGeneratedImage}
              alt={title}
              className="w-full h-full object-cover rounded-2xl border-8 border-pink-400/60 shadow-2xl"
            />
          ) : (
            <div className="w-full h-full bg-white/70 border-8 border-pink-400/60 rounded-2xl flex flex-col items-center justify-center">
              <div className="text-pink-600 text-3xl font-extrabold mb-4">Auto Image Placeholder</div>
              <span className="text-pink-500 text-xl text-center px-4">2nd Term MainSlide</span>
            </div>
          )}
        </div>

        {/* Right: title and definition */}
        <div className="w-1/2 bg-white/80 backdrop-blur-sm rounded-2xl p-12 text-center shadow-2xl border-4 border-purple-400">
          <h2 className="text-8xl font-bold mb-8 bg-clip-text text-transparent bg-gradient-to-r from-pink-500 via-orange-500 to-yellow-500">{title}</h2>
          <p className="text-5xl leading-relaxed text-gray-700">{content}</p>
        </div>
      </div>
    </section>
  );
}

// Keep old component for backward compatibility
export function TOCSlideCreativeCanvas({ title = "Table of Contents", items = [] }) {
  const tocData = {
    title,
    sections: items.map(item => ({ title: item, subsections: [] }))
  };
  return <TOCSlide tocData={tocData} />;
}

const CreativeCanvas = {
  TitleSlide,
  TOCSlide,
  MainSlide1,
  MainSlide2,
  MainSlide3,
  MainSlide4,
  MainSlide5,
  MainSlide6,
  ImageSlide,
  EndSlide,
};

export default CreativeCanvas;

/* ---------------- MAIN SLIDE 2 ---------------- */
export function MainSlide2({ title, content }) {
  return (
    <section className="relative w-[1920px] h-[1080px] bg-white flex items-center justify-center overflow-hidden">
      {/* Split diagonal background */}
      <div className="absolute inset-0 bg-gradient-to-tr from-cyan-200 to-green-200 -skew-y-6"></div>

      {/* Floating framed card */}
      <div className="relative z-10 bg-white/90 p-12 rounded-3xl border-[6px] border-cyan-400 shadow-2xl rotate-1 max-w-3xl">
        <h2 className="text-8xl font-extrabold text-cyan-700 mb-6">{title}</h2>
        <p className="text-5xl text-gray-800 leading-relaxed">{content}</p>
      </div>
    </section>
  );
}

/* ---------------- MAIN SLIDE 3 ---------------- */
export function MainSlide3({ title, content }) {
  return (
    <section className="relative w-[1920px] h-[1080px] bg-gradient-to-bl from-pink-100 to-purple-200 flex overflow-hidden">
      {/* Overlapping shapes */}
      <div className="absolute top-10 left-10 w-80 h-80 bg-yellow-300/40 rounded-full blur-2xl"></div>
      <div className="absolute bottom-20 right-20 w-96 h-96 bg-blue-400/40 rotate-12 rounded-xl blur-2xl"></div>

      {/* Content card */}
      <div className="relative z-10 m-auto bg-white/90 p-12 rounded-2xl border-4 border-purple-400 shadow-lg max-w-3xl text-center">
        <h2 className="text-8xl font-bold text-purple-800 mb-4">{title}</h2>
        <p className="text-5xl text-gray-800 leading-relaxed">{content}</p>
      </div>
    </section>
  );
}

/* ---------------- MAIN SLIDE 4 ---------------- */
/* Split layout: text left, playful graphic right */
export function MainSlide4({ title, content }) {
  return (
    <section className="relative w-[1920px] h-[1080px] bg-gradient-to-r from-pink-100 via-yellow-100 to-cyan-100 flex items-center overflow-hidden">
      {/* Floating playful shapes */}
      <div className="absolute top-10 left-1/2 w-72 h-72 bg-pink-300/40 rounded-full blur-3xl"></div>
      <div className="absolute bottom-20 right-20 w-96 h-96 bg-yellow-300/40 rotate-12 rounded-2xl blur-2xl"></div>

      {/* Text column */}
      <div className="relative z-10 w-1/2 pl-24">
        <h2 className="text-8xl font-extrabold text-pink-700 mb-8">{title}</h2>
        <p className="text-4xl text-gray-800 leading-relaxed">{content}</p>
      </div>

      {/* Decorative doodle area */}
      <div className="relative z-10 w-1/2 flex justify-center items-center">
        <div className="w-[500px] h-[500px] bg-gradient-to-br from-cyan-300 to-purple-300 rounded-full shadow-2xl"></div>
      </div>
    </section>
  );
}

/* ---------------- MAIN SLIDE 5 ---------------- */
/* Vertical flow with big header + divider */
export function MainSlide5({ title, content }) {
  return (
    <section className="relative w-[1920px] h-[1080px] bg-white flex flex-col items-center justify-center overflow-hidden">
      {/* Soft background strokes */}
      <div className="absolute inset-0 bg-gradient-to-br from-yellow-200/60 via-pink-200/40 to-purple-200/40 rotate-2"></div>

      {/* Title up top */}
      <h2 className="relative z-10 text-9xl font-bold text-yellow-600 mb-8">{title}</h2>

      {/* Divider bar */}
      <div className="relative z-10 w-2/3 h-2 bg-gradient-to-r from-pink-400 to-yellow-400 rounded-full mb-10"></div>

      {/* Content text */}
      <p className="relative z-10 text-5xl text-gray-700 leading-relaxed max-w-5xl text-center">
        {content}
      </p>
    </section>
  );
}

/* ---------------- MAIN SLIDE 6 ---------------- */
/* Grid layout with text + icon accents */
import { Cpu, Cloud, Smartphone } from "lucide-react";

export function MainSlide6({ title, content }) {
  return (
    <section className="relative w-[1920px] h-[1080px] bg-gradient-to-tl from-blue-100 via-cyan-100 to-purple-100 grid grid-cols-2 items-center px-24 overflow-hidden">
      {/* Left column with text */}
      <div className="z-10">
        <h2 className="text-8xl font-extrabold text-blue-700 mb-8">{title}</h2>
        <p className="text-5xl text-gray-800 leading-relaxed">{content}</p>
      </div>

      {/* Right column with icons */}
      <div className="z-10 flex flex-col gap-12 items-center">
        <Cpu size={160} className="text-blue-500" />
        <Cloud size={160} className="text-purple-500" />
        <Smartphone size={160} className="text-cyan-500" />
      </div>

      {/* Background accent */}
      <div className="absolute bottom-10 right-32 w-96 h-96 bg-blue-300/40 rounded-full blur-3xl"></div>
    </section>
  );
}


/* ---------------- IMAGE SLIDE ---------------- */
export function ImageSlide({ title, content, autoGeneratedImage, imageUrl }) {
  const imageSrc = autoGeneratedImage || imageUrl;
  return (
    <section className="relative w-[1920px] h-[1080px] bg-gradient-to-r from-yellow-100 to-pink-100 flex items-center justify-center overflow-hidden">
      <div className="relative z-10 w-5/6 h-5/6 flex items-center justify-between">
        {/* Left: auto image or placeholder for 1st term */}
        <div className="w-1/2 h-full flex items-center justify-center pr-8">
          {imageSrc ? (
            <div className="relative w-full h-full bg-white rounded-[2rem] border-[10px] border-purple-300 shadow-2xl rotate-2 overflow-hidden">
              <img
                src={imageSrc}
                alt={title}
                className="w-full h-full object-cover"
              />
            </div>
          ) : (
            <div className="w-4/5 h-4/5 bg-white/70 border-[10px] border-purple-300 rounded-[2rem] rotate-2 shadow-2xl flex flex-col items-center justify-center">
              <div className="text-purple-700 text-3xl font-extrabold mb-4">Auto Image Placeholder</div>
              <span className="text-purple-600 text-xl text-center px-4">1st Term ImageSlide</span>
            </div>
          )}
        </div>

        {/* Right: term and definition */}
        <div className="w-1/2 text-gray-900 px-8">
          {title && (
            <h2 className="text-6xl md:text-7xl lg:text-8xl mb-8 font-extrabold text-pink-700">
              {title}
            </h2>
          )}
          {content && <p className="text-4xl leading-relaxed text-gray-700">{content}</p>}
        </div>
      </div>
    </section>
  );
}

/* ---------------- END SLIDE ---------------- */
export function EndSlide() {
  return (
    <section className="relative w-[1920px] h-[1080px] bg-gradient-to-tr from-purple-500 via-pink-500 to-orange-400 flex items-center justify-center">
      <h1 className="text-6xl font-extrabold text-white drop-shadow-lg rotate-[-2deg]">
        Thank You 🎨
      </h1>
    </section>
  );
}
